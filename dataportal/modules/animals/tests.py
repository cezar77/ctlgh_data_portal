from django.test import TestCase
from django.utils.text import slugify

from dataportal.modules.animals.models import Species, Image


class SpeciesTestCase(TestCase):
    @classmethod
    def setUpTestData(cls):
        """
        Set up test data
        """
        cls.image = Image.objects.create(
            page_url="https://commons.wikimedia.org/wiki/File%3AOvis_orientalis_aries_'Skudde'_(aka).jpg",
            file_url="https://upload.wikimedia.org/wikipedia/commons/e/e7/Ovis_orientalis_aries_%27Skudde%27_%28aka%29.jpg",
            attribution='By Andr√© Karwath aka Aka (Own work) [<a href="https://creativecommons.org/licenses/by-sa/2.5">CC BY-SA 2.5</a>], <a href="https://commons.wikimedia.org/wiki/File%3AOvis_orientalis_aries_&#039;Skudde&#039;_(aka).jpg">via Wikimedia Commons</a>'
        )
        cls.species = Species.objects.create(
            common_name='Sheep',
            species='aries',
            genus='Ovis',
            subfamily='Caprinae',
            family='Bovidae',
            order='Artiodactyla',
            class_name='Mammalia',
            phylum='Chordata',
            ncbi_id=9940,
            image=cls.image
        )

    def test_print_as_string(self):
        """
        Test the __str__ method.
        The object should be printed as string.
        """
        self.assertEqual(
            str(self.species),
            '{} ({})'.format(
                self.species.common_name,
                self.species.binomial_name
            )
        )

    def test_slug_is_autogenerated(self):
        """
        Test the save method.
        The slug should be autogenerated when an object is saved for
        first time.
        """
        self.assertTrue(self.species.slug)
        self.assertEqual(self.species.slug, slugify(self.species.binomial_name))

    def test_slug_doesnt_change(self):
        """
        Test the save method.
        The slug shouldn't change.
        """
        animal = Species.objects.get(slug='ovis-aries')
        animal.species = 'hircus'
        animal.genus = 'Capra'
        animal.save()
        self.assertEqual(self.species.slug, slugify(self.species.binomial_name))
        self.assertNotEqual(self.species.slug, slugify(animal.binomial_name))

    def test_binomial_name(self):
        """
        Test the binomial_name property.
        The binomial name should consist from the genus and species.
        """
        self.assertEqual(
            self.species.binomial_name,
            '{} {}'.format(
                self.species.genus,
                self.species.species
            )
        )

    def test_ncbi_taxonomy_url_as_html(self):
        """
        Test the ncbi_taxonomy_html property.
        An HTML snippet pointing to the NCBI Taxonomy resource for the
        species should be generated.
        """
        self.assertIn(
            self.species.ncbi_taxonomy_url,
            self.species.ncbi_taxonomy_html
        )

    def test_display_image(self):
        """
        Test the display_image property.
        An HTML snippet containing a figure with the image and the
        attribution should be generated.
        """
        self.assertIn(
            self.species.image.file_url,
            self.species.display_image
        )
        self.assertIn(
            self.species.image.attribution,
            '<figcaption>{}</figcaption>'.format(self.species.display_image)
        )
